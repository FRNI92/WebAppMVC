@using Database.Entities

@inject UserManager<AppUserEntity> UserManager
@{
    var user = await UserManager.GetUserAsync(User);
    var notifications = new List<NotificationEntity>();

    if (user?.MemberId != null)
    {
        notifications = (await NotificationService.GetNotificationsAsync(user.MemberId.Value)).OrderByDescending(x => x.Created).ToList();
    }
}


<div id="notification-container">
    <button id="notification-dropdown-menu"
    type="button"
    data-type="dropdown"
    data-target="#notification-dropdown"
    class="btn-notification btn-notification-trigger">
        @if (notifications.Any())
        {
                <i class="dot dot-red fa-solid fa-circle show"></i>
        }
        <i class="fa-duotone fa-solid fa-bell"
        style="--fa-primary-opacity: 0.4; --fa-secondary-opacity: 1"></i>
    </button>

    <div id="notification-dropdown" class="dropdown">
        <div class="badge-dropdown-header">
            <h4>Notifications</h4>
            <div class="badge badge-red notification-number">@notifications.Count()</div>
        </div>
        <div class="divider"></div>
        <div class="notifications">
            @foreach(var notification in notifications)
            
            {
                <div class="notification notification-item" data-id="@notification.Id">
                <div class="user-image">
                    <img src="@notification.Icon" alt="template avatar" />
                </div>
                <span class="message">@notification.Message</span>
                <span class="time" data-created="@notification.Created.ToString("s")">@notification.Created</span>
                    <button class="btn-close" onclick="dismissNotification('@notification.Id')"></button>
            </div>
            }
                
        </div>
    </div>
</div>

<script>

    //start new signlarR connection to my Hub
    const connection = new signalR.HubConnectionBuilder()// have tried changeing url an rewriting this part but devtools still says refrenceerror signalR not defined
    .withUrl("/notificationhub")// my dismiss part still goes to correct API so I dont think this error breaks the program
    .build()


    //Listen for incoming notification from server
    connection.on("ReceiveNotification", function (notification) {
        console.log("entered ReceiveNotification", notification);
    const notifications = document.querySelector(".notifications");

    // create a new notification item
    const item = document.createElement("div");
    item.className = "notification notification-item";
    item.setAttribute("data-id", notification.id);

    //fill it with the following structure
    item.innerHTML = `
        <img class="image" src="${notification.icon}" />
        <div class="message">${notification.message}</div>
        <div class="time" data-created="${new Date(notification.created).toISOString()}">${notification.created}</div>
        <button class="btn-close" onclick="dismissNotification('${notification.id}')"></button>
    `;

    //insert new notification at top
    notifications.insertBefore(item, notifications.firstChild);

    updateRelativeTimes();// add these functions
    updateNotificationCount(); // add these functions
    });

    // uses removeNotification function on line 105
    connection.on("NotificationDismissed", function (notificationId) {
        removeNotification(notificationId);
    });


    //starts the signalR connection and logs the error if fail
    // goes to the api controller

    connection.start().catch(error => console.error(error));

    async function dismissNotification(notificationId) {
        try {
            const res = await fetch(`/api/notification/dismiss/${notificationId}`, {method: 'POST' });
    if (res.ok) {
        removeNotification(notificationId);
            } else {
        console.error('Error removing notification');
            }
        } catch (error) {
        console.error('Error removing notification: ', error);
        }
    }
    //same hub. just a different message it can catch
    // removes item. the  innterHTML I made before
    //so we can keep it DRY
    function removeNotification(notificationId) {
        console.log("Removing notification with ID:", notificationId);
    const element = document.querySelector(`.notification-item[data-id='${notificationId}']`);
    if (element) {
        element.remove();
    updateNotificationCount();
        }
    }

    function updateNotificationCount() {
    const notifications = document.querySelector('.notifications');
    const notificationNumber = document.querySelector('.notification-number');
    const notificationDropdownButton = document.querySelector('#notification-dropdown-menu');
    const dot = notificationDropdownButton.querySelector('.dot.dot-red');
    const count = notifications.querySelectorAll('.notification-item').length;
    console.log("Current notification count:", count);

    if (notificationNumber) {
        notificationNumber.textContent = count;
        }

    if (dot) {
            if (count > 0) {
        dot.classList.add('show'); // could not see dot so I remade it with show
            } else {
        dot.classList.remove('show'); // hides dot
            }
        }
    }
</script>